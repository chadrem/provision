####################################
# GLOBAL SETTINGS.
####################################
user nginx;
worker_processes auto;
pid /run/nginx.pid;
error_log /var/log/nginx/error.log;

####################################
# EVENTS SETTINGS.
####################################
events {
  worker_connections 2048;
}

####################################
# HTTP SETTINGS.
####################################
http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;
  sendfile on;
  gzip on;
  server_tokens off;
  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';
  access_log /var/log/nginx/access.log main;
  limit_req_zone $binary_remote_addr zone=dynamic:10m rate=2r/s;
  limit_req_zone $binary_remote_addr zone=static:10m rate=40r/s;
  limit_req_status 504;
  client_max_body_size 300m;
  real_ip_header X-Forwarded-For;
  set_real_ip_from 0.0.0.0/0;

  ####################################
  # VIRTUAL SERVER.
  ####################################
  server {
    listen 80 default;
    server_name www.myproject.com staging.myproject.com;
    root /apps/myproject/current/public;

    location / {
      limit_req zone=dynamic burst=10;
      proxy_set_header Host $host;
      proxy_redirect off;
      proxy_pass http://unix://apps/myproject/shared/tmp/sockets/puma.sock;
    }

    location ~* ^/assets|system|\.well-known|.+\.txt|.+\.html|.+\.png|.+\.jpg|.+\.ico|\.+\.gif/ {
      limit_req zone=static burst=20;
      expires 7d;
      log_not_found off;
      add_header Cache-Control public;

      # Some browsers still send conditional-GET requests if there's a
      # Last-Modified header or an ETag header even if they haven't
      # reached the expiry date sent in the Expires header.
      add_header Last-Modified "";
      add_header ETag "";
      break;
    }
  }

  ####################################
  # REDIRECTS.
  ####################################
  server {
    listen 80;
    server_name myproject.com;
    return 301 https://www.myproject.com$request_uri;
  }
}
